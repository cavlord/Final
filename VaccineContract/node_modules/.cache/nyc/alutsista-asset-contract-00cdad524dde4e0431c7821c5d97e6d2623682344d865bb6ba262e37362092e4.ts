"use strict";/*
 * SPDX-License-Identifier: Apache-2.0
 */function cov_1ysncxipf2(){var path="C:\\Users\\FAHMIRAHMADI\\Documents\\GitHub\\blockchain-assignment\\AlutsistaContract\\src\\alutsista-asset-contract.ts";var hash="73aaa4c2486289c16cb7cd6fbe0c335067c8bb6c";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\FAHMIRAHMADI\\Documents\\GitHub\\blockchain-assignment\\AlutsistaContract\\src\\alutsista-asset-contract.ts",statementMap:{"0":{start:{line:5,column:17},end:{line:10,column:1}},"1":{start:{line:6,column:12},end:{line:6,column:28}},"2":{start:{line:6,column:34},end:{line:6,column:125}},"3":{start:{line:7,column:4},end:{line:8,column:150}},"4":{start:{line:7,column:79},end:{line:7,column:131}},"5":{start:{line:8,column:9},end:{line:8,column:150}},"6":{start:{line:8,column:22},end:{line:8,column:43}},"7":{start:{line:8,column:58},end:{line:8,column:150}},"8":{start:{line:8,column:81},end:{line:8,column:150}},"9":{start:{line:9,column:4},end:{line:9,column:66}},"10":{start:{line:11,column:17},end:{line:13,column:1}},"11":{start:{line:12,column:4},end:{line:12,column:109}},"12":{start:{line:12,column:79},end:{line:12,column:109}},"13":{start:{line:14,column:0},end:{line:14,column:62}},"14":{start:{line:15,column:0},end:{line:15,column:40}},"15":{start:{line:16,column:30},end:{line:16,column:60}},"16":{start:{line:17,column:26},end:{line:17,column:54}},"17":{start:{line:18,column:29},end:{line:199,column:1}},"18":{start:{line:20,column:23},end:{line:20,column:64}},"19":{start:{line:21,column:8},end:{line:21,column:47}},"20":{start:{line:28,column:23},end:{line:28,column:77}},"21":{start:{line:29,column:8},end:{line:31,column:9}},"22":{start:{line:30,column:12},end:{line:30,column:86}},"23":{start:{line:32,column:31},end:{line:32,column:69}},"24":{start:{line:33,column:8},end:{line:33,column:35}},"25":{start:{line:34,column:8},end:{line:34,column:37}},"26":{start:{line:35,column:8},end:{line:35,column:35}},"27":{start:{line:36,column:23},end:{line:36,column:66}},"28":{start:{line:37,column:8},end:{line:37,column:58}},"29":{start:{line:38,column:29},end:{line:38,column:52}},"30":{start:{line:39,column:8},end:{line:41,column:9}},"31":{start:{line:40,column:12},end:{line:40,column:108}},"32":{start:{line:44,column:23},end:{line:44,column:77}},"33":{start:{line:45,column:8},end:{line:47,column:9}},"34":{start:{line:46,column:12},end:{line:46,column:86}},"35":{start:{line:48,column:23},end:{line:48,column:64}},"36":{start:{line:49,column:31},end:{line:49,column:60}},"37":{start:{line:50,column:8},end:{line:57,column:9}},"38":{start:{line:51,column:31},end:{line:51,column:98}},"39":{start:{line:52,column:12},end:{line:52,column:58}},"40":{start:{line:53,column:12},end:{line:53,column:34}},"41":{start:{line:56,column:12},end:{line:56,column:34}},"42":{start:{line:64,column:23},end:{line:64,column:77}},"43":{start:{line:65,column:8},end:{line:67,column:9}},"44":{start:{line:66,column:12},end:{line:66,column:86}},"45":{start:{line:68,column:31},end:{line:68,column:69}},"46":{start:{line:69,column:8},end:{line:69,column:35}},"47":{start:{line:70,column:8},end:{line:70,column:37}},"48":{start:{line:71,column:8},end:{line:71,column:35}},"49":{start:{line:72,column:23},end:{line:72,column:66}},"50":{start:{line:73,column:8},end:{line:73,column:58}},"51":{start:{line:80,column:23},end:{line:80,column:77}},"52":{start:{line:81,column:8},end:{line:83,column:9}},"53":{start:{line:82,column:12},end:{line:82,column:86}},"54":{start:{line:84,column:8},end:{line:84,column:53}},"55":{start:{line:87,column:25},end:{line:87,column:30}},"56":{start:{line:88,column:23},end:{line:88,column:28}},"57":{start:{line:89,column:25},end:{line:89,column:73}},"58":{start:{line:90,column:27},end:{line:90,column:29}},"59":{start:{line:91,column:8},end:{line:112,column:9}},"60":{start:{line:92,column:24},end:{line:92,column:45}},"61":{start:{line:93,column:12},end:{line:105,column:13}},"62":{start:{line:94,column:16},end:{line:94,column:56}},"63":{start:{line:95,column:28},end:{line:95,column:41}},"64":{start:{line:97,column:16},end:{line:103,column:17}},"65":{start:{line:98,column:20},end:{line:98,column:68}},"66":{start:{line:101,column:20},end:{line:101,column:37}},"67":{start:{line:102,column:20},end:{line:102,column:56}},"68":{start:{line:104,column:16},end:{line:104,column:49}},"69":{start:{line:106,column:12},end:{line:111,column:13}},"70":{start:{line:107,column:16},end:{line:107,column:43}},"71":{start:{line:108,column:16},end:{line:108,column:39}},"72":{start:{line:109,column:16},end:{line:109,column:41}},"73":{start:{line:110,column:16},end:{line:110,column:50}},"74":{start:{line:115,column:22},end:{line:115,column:45}},"75":{start:{line:116,column:28},end:{line:116,column:49}},"76":{start:{line:117,column:25},end:{line:117,column:67}},"77":{start:{line:118,column:27},end:{line:118,column:29}},"78":{start:{line:119,column:8},end:{line:140,column:9}},"79":{start:{line:120,column:24},end:{line:120,column:45}},"80":{start:{line:121,column:12},end:{line:133,column:13}},"81":{start:{line:122,column:16},end:{line:122,column:56}},"82":{start:{line:123,column:28},end:{line:123,column:41}},"83":{start:{line:125,column:16},end:{line:131,column:17}},"84":{start:{line:126,column:20},end:{line:126,column:68}},"85":{start:{line:129,column:20},end:{line:129,column:37}},"86":{start:{line:130,column:20},end:{line:130,column:56}},"87":{start:{line:132,column:16},end:{line:132,column:49}},"88":{start:{line:134,column:12},end:{line:139,column:13}},"89":{start:{line:135,column:16},end:{line:135,column:43}},"90":{start:{line:136,column:16},end:{line:136,column:39}},"91":{start:{line:137,column:16},end:{line:137,column:41}},"92":{start:{line:138,column:16},end:{line:138,column:50}},"93":{start:{line:143,column:22},end:{line:143,column:59}},"94":{start:{line:144,column:28},end:{line:144,column:49}},"95":{start:{line:145,column:39},end:{line:145,column:111}},"96":{start:{line:146,column:27},end:{line:146,column:29}},"97":{start:{line:147,column:8},end:{line:172,column:9}},"98":{start:{line:148,column:24},end:{line:148,column:45}},"99":{start:{line:149,column:12},end:{line:161,column:13}},"100":{start:{line:150,column:16},end:{line:150,column:56}},"101":{start:{line:151,column:28},end:{line:151,column:41}},"102":{start:{line:153,column:16},end:{line:159,column:17}},"103":{start:{line:154,column:20},end:{line:154,column:68}},"104":{start:{line:157,column:20},end:{line:157,column:37}},"105":{start:{line:158,column:20},end:{line:158,column:56}},"106":{start:{line:160,column:16},end:{line:160,column:49}},"107":{start:{line:162,column:12},end:{line:171,column:13}},"108":{start:{line:163,column:31},end:{line:166,column:17}},"109":{start:{line:167,column:16},end:{line:167,column:43}},"110":{start:{line:168,column:16},end:{line:168,column:39}},"111":{start:{line:169,column:16},end:{line:169,column:37}},"112":{start:{line:170,column:16},end:{line:170,column:46}},"113":{start:{line:175,column:25},end:{line:175,column:74}},"114":{start:{line:176,column:27},end:{line:176,column:29}},"115":{start:{line:177,column:8},end:{line:197,column:9}},"116":{start:{line:178,column:24},end:{line:178,column:45}},"117":{start:{line:179,column:12},end:{line:190,column:13}},"118":{start:{line:180,column:16},end:{line:180,column:56}},"119":{start:{line:182,column:16},end:{line:188,column:17}},"120":{start:{line:183,column:20},end:{line:183,column:68}},"121":{start:{line:186,column:20},end:{line:186,column:37}},"122":{start:{line:187,column:20},end:{line:187,column:56}},"123":{start:{line:189,column:16},end:{line:189,column:44}},"124":{start:{line:191,column:12},end:{line:196,column:13}},"125":{start:{line:192,column:16},end:{line:192,column:43}},"126":{start:{line:193,column:16},end:{line:193,column:39}},"127":{start:{line:194,column:16},end:{line:194,column:41}},"128":{start:{line:195,column:16},end:{line:195,column:50}},"129":{start:{line:200,column:0},end:{line:206,column:67}},"130":{start:{line:207,column:0},end:{line:212,column:67}},"131":{start:{line:213,column:0},end:{line:219,column:65}},"132":{start:{line:220,column:0},end:{line:225,column:67}},"133":{start:{line:226,column:0},end:{line:231,column:67}},"134":{start:{line:232,column:0},end:{line:237,column:61}},"135":{start:{line:238,column:0},end:{line:243,column:59}},"136":{start:{line:244,column:0},end:{line:249,column:61}},"137":{start:{line:250,column:0},end:{line:255,column:62}},"138":{start:{line:256,column:0},end:{line:258,column:27}},"139":{start:{line:259,column:0},end:{line:259,column:56}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:5,column:46},end:{line:5,column:47}},loc:{start:{line:5,column:87},end:{line:10,column:1}},line:5},"1":{name:"(anonymous_1)",decl:{start:{line:11,column:46},end:{line:11,column:47}},loc:{start:{line:11,column:62},end:{line:13,column:1}},line:11},"2":{name:"(anonymous_2)",decl:{start:{line:19,column:4},end:{line:19,column:5}},loc:{start:{line:19,column:54},end:{line:22,column:5}},line:19},"3":{name:"(anonymous_3)",decl:{start:{line:23,column:4},end:{line:23,column:5}},loc:{start:{line:23,column:73},end:{line:42,column:5}},line:23},"4":{name:"(anonymous_4)",decl:{start:{line:43,column:4},end:{line:43,column:5}},loc:{start:{line:43,column:52},end:{line:58,column:5}},line:43},"5":{name:"(anonymous_5)",decl:{start:{line:59,column:4},end:{line:59,column:5}},loc:{start:{line:59,column:73},end:{line:74,column:5}},line:59},"6":{name:"(anonymous_6)",decl:{start:{line:75,column:4},end:{line:75,column:5}},loc:{start:{line:75,column:54},end:{line:85,column:5}},line:75},"7":{name:"(anonymous_7)",decl:{start:{line:86,column:4},end:{line:86,column:5}},loc:{start:{line:86,column:30},end:{line:113,column:5}},line:86},"8":{name:"(anonymous_8)",decl:{start:{line:114,column:4},end:{line:114,column:5}},loc:{start:{line:114,column:35},end:{line:141,column:5}},line:114},"9":{name:"(anonymous_9)",decl:{start:{line:142,column:4},end:{line:142,column:5}},loc:{start:{line:142,column:51},end:{line:173,column:5}},line:142},"10":{name:"(anonymous_10)",decl:{start:{line:174,column:4},end:{line:174,column:5}},loc:{start:{line:174,column:49},end:{line:198,column:5}},line:174}},branchMap:{"0":{loc:{start:{line:5,column:17},end:{line:10,column:1}},type:"binary-expr",locations:[{start:{line:5,column:18},end:{line:5,column:22}},{start:{line:5,column:26},end:{line:5,column:41}},{start:{line:5,column:46},end:{line:10,column:1}}],line:5},"1":{loc:{start:{line:6,column:34},end:{line:6,column:125}},type:"cond-expr",locations:[{start:{line:6,column:42},end:{line:6,column:48}},{start:{line:6,column:51},end:{line:6,column:125}}],line:6},"2":{loc:{start:{line:6,column:51},end:{line:6,column:125}},type:"cond-expr",locations:[{start:{line:6,column:67},end:{line:6,column:118}},{start:{line:6,column:121},end:{line:6,column:125}}],line:6},"3":{loc:{start:{line:7,column:4},end:{line:8,column:150}},type:"if",locations:[{start:{line:7,column:4},end:{line:8,column:150}},{start:{line:7,column:4},end:{line:8,column:150}}],line:7},"4":{loc:{start:{line:7,column:8},end:{line:7,column:77}},type:"binary-expr",locations:[{start:{line:7,column:8},end:{line:7,column:35}},{start:{line:7,column:39},end:{line:7,column:77}}],line:7},"5":{loc:{start:{line:8,column:58},end:{line:8,column:150}},type:"if",locations:[{start:{line:8,column:58},end:{line:8,column:150}},{start:{line:8,column:58},end:{line:8,column:150}}],line:8},"6":{loc:{start:{line:8,column:85},end:{line:8,column:149}},type:"binary-expr",locations:[{start:{line:8,column:86},end:{line:8,column:143}},{start:{line:8,column:148},end:{line:8,column:149}}],line:8},"7":{loc:{start:{line:8,column:86},end:{line:8,column:143}},type:"cond-expr",locations:[{start:{line:8,column:94},end:{line:8,column:98}},{start:{line:8,column:101},end:{line:8,column:143}}],line:8},"8":{loc:{start:{line:8,column:101},end:{line:8,column:143}},type:"cond-expr",locations:[{start:{line:8,column:109},end:{line:8,column:126}},{start:{line:8,column:129},end:{line:8,column:143}}],line:8},"9":{loc:{start:{line:9,column:11},end:{line:9,column:62}},type:"binary-expr",locations:[{start:{line:9,column:11},end:{line:9,column:16}},{start:{line:9,column:20},end:{line:9,column:21}},{start:{line:9,column:25},end:{line:9,column:62}}],line:9},"10":{loc:{start:{line:11,column:17},end:{line:13,column:1}},type:"binary-expr",locations:[{start:{line:11,column:18},end:{line:11,column:22}},{start:{line:11,column:26},end:{line:11,column:41}},{start:{line:11,column:46},end:{line:13,column:1}}],line:11},"11":{loc:{start:{line:12,column:4},end:{line:12,column:109}},type:"if",locations:[{start:{line:12,column:4},end:{line:12,column:109}},{start:{line:12,column:4},end:{line:12,column:109}}],line:12},"12":{loc:{start:{line:12,column:8},end:{line:12,column:77}},type:"binary-expr",locations:[{start:{line:12,column:8},end:{line:12,column:35}},{start:{line:12,column:39},end:{line:12,column:77}}],line:12},"13":{loc:{start:{line:21,column:16},end:{line:21,column:45}},type:"binary-expr",locations:[{start:{line:21,column:16},end:{line:21,column:24}},{start:{line:21,column:28},end:{line:21,column:45}}],line:21},"14":{loc:{start:{line:29,column:8},end:{line:31,column:9}},type:"if",locations:[{start:{line:29,column:8},end:{line:31,column:9}},{start:{line:29,column:8},end:{line:31,column:9}}],line:29},"15":{loc:{start:{line:39,column:8},end:{line:41,column:9}},type:"if",locations:[{start:{line:39,column:8},end:{line:41,column:9}},{start:{line:39,column:8},end:{line:41,column:9}}],line:39},"16":{loc:{start:{line:45,column:8},end:{line:47,column:9}},type:"if",locations:[{start:{line:45,column:8},end:{line:47,column:9}},{start:{line:45,column:8},end:{line:47,column:9}}],line:45},"17":{loc:{start:{line:65,column:8},end:{line:67,column:9}},type:"if",locations:[{start:{line:65,column:8},end:{line:67,column:9}},{start:{line:65,column:8},end:{line:67,column:9}}],line:65},"18":{loc:{start:{line:81,column:8},end:{line:83,column:9}},type:"if",locations:[{start:{line:81,column:8},end:{line:83,column:9}},{start:{line:81,column:8},end:{line:83,column:9}}],line:81},"19":{loc:{start:{line:93,column:12},end:{line:105,column:13}},type:"if",locations:[{start:{line:93,column:12},end:{line:105,column:13}},{start:{line:93,column:12},end:{line:105,column:13}}],line:93},"20":{loc:{start:{line:93,column:16},end:{line:93,column:55}},type:"binary-expr",locations:[{start:{line:93,column:16},end:{line:93,column:25}},{start:{line:93,column:29},end:{line:93,column:55}}],line:93},"21":{loc:{start:{line:106,column:12},end:{line:111,column:13}},type:"if",locations:[{start:{line:106,column:12},end:{line:111,column:13}},{start:{line:106,column:12},end:{line:111,column:13}}],line:106},"22":{loc:{start:{line:121,column:12},end:{line:133,column:13}},type:"if",locations:[{start:{line:121,column:12},end:{line:133,column:13}},{start:{line:121,column:12},end:{line:133,column:13}}],line:121},"23":{loc:{start:{line:121,column:16},end:{line:121,column:55}},type:"binary-expr",locations:[{start:{line:121,column:16},end:{line:121,column:25}},{start:{line:121,column:29},end:{line:121,column:55}}],line:121},"24":{loc:{start:{line:134,column:12},end:{line:139,column:13}},type:"if",locations:[{start:{line:134,column:12},end:{line:139,column:13}},{start:{line:134,column:12},end:{line:139,column:13}}],line:134},"25":{loc:{start:{line:149,column:12},end:{line:161,column:13}},type:"if",locations:[{start:{line:149,column:12},end:{line:161,column:13}},{start:{line:149,column:12},end:{line:161,column:13}}],line:149},"26":{loc:{start:{line:149,column:16},end:{line:149,column:55}},type:"binary-expr",locations:[{start:{line:149,column:16},end:{line:149,column:25}},{start:{line:149,column:29},end:{line:149,column:55}}],line:149},"27":{loc:{start:{line:162,column:12},end:{line:171,column:13}},type:"if",locations:[{start:{line:162,column:12},end:{line:171,column:13}},{start:{line:162,column:12},end:{line:171,column:13}}],line:162},"28":{loc:{start:{line:179,column:12},end:{line:190,column:13}},type:"if",locations:[{start:{line:179,column:12},end:{line:190,column:13}},{start:{line:179,column:12},end:{line:190,column:13}}],line:179},"29":{loc:{start:{line:179,column:16},end:{line:179,column:55}},type:"binary-expr",locations:[{start:{line:179,column:16},end:{line:179,column:25}},{start:{line:179,column:29},end:{line:179,column:55}}],line:179},"30":{loc:{start:{line:191,column:12},end:{line:196,column:13}},type:"if",locations:[{start:{line:191,column:12},end:{line:196,column:13}},{start:{line:191,column:12},end:{line:196,column:13}}],line:191}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},b:{"0":[0,0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0]},inputSourceMap:{version:3,file:"C:/Users/FAHMIRAHMADI/Documents/GitHub/blockchain-assignment/AlutsistaContract/src/alutsista-asset-contract.ts",sources:["C:/Users/FAHMIRAHMADI/Documents/GitHub/blockchain-assignment/AlutsistaContract/src/alutsista-asset-contract.ts"],names:[],mappings:"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",sourcesContent:["/*\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { promises } from 'dns';\nimport { Context, Contract, Info, Returns, Transaction } from 'fabric-contract-api';\nimport { AlutsistaAsset } from './alutsista-asset';\n\n@Info({ title: 'AlutsistaAssetContract', description: 'My Smart Contract' })\nexport class AlutsistaAssetContract extends Contract {\n\n    @Transaction(false)\n    @Returns('boolean')\n    public async alutsistaAssetExists(ctx: Context, alutsistaAssetId: string): Promise<boolean> {\n        const buffer = await ctx.stub.getState(alutsistaAssetId);\n        return (!!buffer && buffer.length > 0);\n    }\n\n    @Transaction()\n    public async createAlutsistaAsset(ctx: Context, alutsistaAssetId: string, name: string, model: string, year: number): Promise<void> {\n    //    const hasAccess = await this.hasRole(ctx, ['Manufacturer']);\n    //     if (!hasAccess) {\n    //         throw new Error(`Only manufacturer can create car asset`);\n    //     }\n        const exists = await this.alutsistaAssetExists(ctx, alutsistaAssetId);\n        if (exists) {\n            throw new Error(`The alutsista asset ${alutsistaAssetId} already exists`);\n        }\n        const alutsistaAsset = new AlutsistaAsset();\n        alutsistaAsset.name = name;\n        alutsistaAsset.model = model;\n        alutsistaAsset.year = year;\n        const buffer = Buffer.from(JSON.stringify(alutsistaAsset));\n        await ctx.stub.putState(alutsistaAssetId, buffer);\n\n        const transientMap = ctx.stub.getTransient();\n        if (transientMap.get('remark')) {\n            await ctx.stub.putPrivateData('productionRemark', alutsistaAssetId, transientMap.get('remark'));\n        }\n    }\n\n    @Transaction(false)\n    @Returns('AlutsistaAsset')\n    public async readAlutsistaAsset(ctx: Context, alutsistaAssetId: string): Promise<AlutsistaAsset> {\n        const exists = await this.alutsistaAssetExists(ctx, alutsistaAssetId);\n        if (!exists) {\n            throw new Error(`The alutsista asset ${alutsistaAssetId} does not exist`);\n        }\n        const buffer = await ctx.stub.getState(alutsistaAssetId);\n        const alutsistaAsset = JSON.parse(buffer.toString()) as AlutsistaAsset;\n\n        try {\n            const privBuffer = await ctx.stub.getPrivateData('productionRemark', alutsistaAssetId);\n            alutsistaAsset.remark = privBuffer.toString();\n            return alutsistaAsset;\n        } catch (error) {\n            return alutsistaAsset;\n        }\n    }\n\n    @Transaction()\n    public async updateAlutsistaAsset(ctx: Context, alutsistaAssetId: string, name: string, model: string, year: number): Promise<void> {\n        // const hasAccess = await this.hasRole(ctx, ['Manufacturer', 'Dealer']);\n        // if (!hasAccess) {\n        //     throw new Error(`Only manufacturer or dealer can update car asset`);\n        // }\n        const exists = await this.alutsistaAssetExists(ctx, alutsistaAssetId);\n        if (!exists) {\n            throw new Error(`The alutsista asset ${alutsistaAssetId} does not exist`);\n        }\n        const alutsistaAsset = new AlutsistaAsset();\n        alutsistaAsset.name = name;\n        alutsistaAsset.model = model;\n        alutsistaAsset.year = year;\n        const buffer = Buffer.from(JSON.stringify(alutsistaAsset));\n        await ctx.stub.putState(alutsistaAssetId, buffer);\n    }\n\n    @Transaction()\n    public async deleteAlutsistaAsset(ctx: Context, alutsistaAssetId: string): Promise<void> {\n        // const hasAccess = await this.hasRole(ctx, ['Dealer']);\n        // if (!hasAccess) {\n        //     throw new Error(`Only dealer can delete car asset`);\n        // }\n        const exists = await this.alutsistaAssetExists(ctx, alutsistaAssetId);\n        if (!exists) {\n            throw new Error(`The alutsista asset ${alutsistaAssetId} does not exist`);\n        }\n        await ctx.stub.deleteState(alutsistaAssetId);\n    }\n\n    @Transaction(false)\n    public async queryAllAssets(ctx: Context): Promise<string> {\n        const startKey = '000';\n        const endKey = '999';\n        const iterator = await ctx.stub.getStateByRange(startKey, endKey);\n        const allResults = [];\n        while (true) {\n            const res = await iterator.next();\n            if (res.value && res.value.value.toString()) {\n                console.log(res.value.value.toString());\n\n                const Key = res.value.key;\n                let Record;\n                try {\n                    Record = JSON.parse(res.value.value.toString());\n                } catch (err) {\n                    console.log(err);\n                    Record = res.value.value.toString();\n                }\n                allResults.push({ Key, Record });\n            }\n            if (res.done) {\n                console.log('end of data');\n                await iterator.close();\n                console.info(allResults);\n                return JSON.stringify(allResults);\n            }\n        }\n    }\n\n    @Transaction(false)\n    public async queryByMaker(ctx: Context, maker: string): Promise<string> {\n        const query = { selector: { maker } };\n        const queryString = JSON.stringify(query);\n        const iterator = await ctx.stub.getQueryResult(queryString);\n        const allResults = [];\n        while (true) {\n            const res = await iterator.next();\n            if (res.value && res.value.value.toString()) {\n                console.log(res.value.value.toString());\n\n                const Key = res.value.key;\n                let Record;\n                try {\n                    Record = JSON.parse(res.value.value.toString());\n                } catch (err) {\n                    console.log(err);\n                    Record = res.value.value.toString();\n                }\n                allResults.push({ Key, Record });\n            }\n            if (res.done) {\n                console.log('end of data');\n                await iterator.close();\n                console.info(allResults);\n                return JSON.stringify(allResults);\n            }\n        }\n    }\n\n    @Transaction(false)\n    public async queryByMinYear(ctx: Context, min: number, size: number, bookmark?: string): Promise<string> {\n        const query = { selector: { year: { $gte: min } } };\n        const queryString = JSON.stringify(query);\n\n        const { iterator, metadata } = await ctx.stub.getQueryResultWithPagination(queryString, size, bookmark);\n\n        const allResults = [];\n        while (true) {\n            const res = await iterator.next();\n            if (res.value && res.value.value.toString()) {\n                console.log(res.value.value.toString());\n\n                const Key = res.value.key;\n                let Record;\n                try {\n                    Record = JSON.parse(res.value.value.toString());\n                } catch (err) {\n                    console.log(err);\n                    Record = res.value.value.toString();\n                }\n                allResults.push({ Key, Record });\n            }\n            if (res.done) {\n                const result = {\n                    results: allResults,\n                    metadata\n                };\n                console.log('end of data');\n                await iterator.close();\n                console.info(result);\n                return JSON.stringify(result);\n            }\n        }\n    }\n\n    @Transaction(false)\n    public async getHistoryByKey(ctx: Context, alutsistaAssetId: string): Promise<string> {\n        const iterator = await ctx.stub.getHistoryForKey(alutsistaAssetId);\n        const allResults = [];\n        while (true) {\n            const res = await iterator.next();\n            if (res.value && res.value.value.toString()) {\n                console.log(res.value.value.toString());\n\n                let Record;\n                try {\n                    Record = JSON.parse(res.value.value.toString());\n                } catch (err) {\n                    console.log(err);\n                    Record = res.value.value.toString();\n                }\n                allResults.push({ Record });\n            }\n            if (res.done) {\n                console.log('end of data');\n                await iterator.close();\n                console.info(allResults);\n                return JSON.stringify(allResults);\n            }\n        }\n    }\n\n    // public async hasRole(ctx: Context, roles: string[]) {\n    //     const clientID = ctx.clientIdentity;\n    //     for (const roleName of roles) {\n    //         if (clientID.assertAttributeValue('role', roleName)) {\n    //             if (clientID.getMSPID() === 'Org1MSP' && clientID.getAttributeValue('role') === 'Manufacturer') { return true; }\n    //             if (clientID.getMSPID() === 'Org2MSP' && clientID.getAttributeValue('role') === 'Dealer') { return true; }\n    //         }\n    //     }\n    //     return false;\n    //     }\n    }"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"73aaa4c2486289c16cb7cd6fbe0c335067c8bb6c"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1ysncxipf2=function(){return actualCoverage;};}return actualCoverage;}cov_1ysncxipf2();var __decorate=(cov_1ysncxipf2().s[0]++,(cov_1ysncxipf2().b[0][0]++,this)&&(cov_1ysncxipf2().b[0][1]++,this.__decorate)||(cov_1ysncxipf2().b[0][2]++,function(decorators,target,key,desc){cov_1ysncxipf2().f[0]++;var c=(cov_1ysncxipf2().s[1]++,arguments.length),r=(cov_1ysncxipf2().s[2]++,c<3?(cov_1ysncxipf2().b[1][0]++,target):(cov_1ysncxipf2().b[1][1]++,desc===null?(cov_1ysncxipf2().b[2][0]++,desc=Object.getOwnPropertyDescriptor(target,key)):(cov_1ysncxipf2().b[2][1]++,desc))),d;cov_1ysncxipf2().s[3]++;if((cov_1ysncxipf2().b[4][0]++,typeof Reflect==="object")&&(cov_1ysncxipf2().b[4][1]++,typeof Reflect.decorate==="function")){cov_1ysncxipf2().b[3][0]++;cov_1ysncxipf2().s[4]++;r=Reflect.decorate(decorators,target,key,desc);}else{cov_1ysncxipf2().b[3][1]++;cov_1ysncxipf2().s[5]++;for(var i=(cov_1ysncxipf2().s[6]++,decorators.length-1);i>=0;i--){cov_1ysncxipf2().s[7]++;if(d=decorators[i]){cov_1ysncxipf2().b[5][0]++;cov_1ysncxipf2().s[8]++;r=(cov_1ysncxipf2().b[6][0]++,c<3?(cov_1ysncxipf2().b[7][0]++,d(r)):(cov_1ysncxipf2().b[7][1]++,c>3?(cov_1ysncxipf2().b[8][0]++,d(target,key,r)):(cov_1ysncxipf2().b[8][1]++,d(target,key))))||(cov_1ysncxipf2().b[6][1]++,r);}else{cov_1ysncxipf2().b[5][1]++;}}}cov_1ysncxipf2().s[9]++;return(cov_1ysncxipf2().b[9][0]++,c>3)&&(cov_1ysncxipf2().b[9][1]++,r)&&(cov_1ysncxipf2().b[9][2]++,Object.defineProperty(target,key,r)),r;}));var __metadata=(cov_1ysncxipf2().s[10]++,(cov_1ysncxipf2().b[10][0]++,this)&&(cov_1ysncxipf2().b[10][1]++,this.__metadata)||(cov_1ysncxipf2().b[10][2]++,function(k,v){cov_1ysncxipf2().f[1]++;cov_1ysncxipf2().s[11]++;if((cov_1ysncxipf2().b[12][0]++,typeof Reflect==="object")&&(cov_1ysncxipf2().b[12][1]++,typeof Reflect.metadata==="function")){cov_1ysncxipf2().b[11][0]++;cov_1ysncxipf2().s[12]++;return Reflect.metadata(k,v);}else{cov_1ysncxipf2().b[11][1]++;}}));cov_1ysncxipf2().s[13]++;Object.defineProperty(exports,"__esModule",{value:true});cov_1ysncxipf2().s[14]++;exports.AlutsistaAssetContract=void 0;const fabric_contract_api_1=(cov_1ysncxipf2().s[15]++,require("fabric-contract-api"));const alutsista_asset_1=(cov_1ysncxipf2().s[16]++,require("./alutsista-asset"));cov_1ysncxipf2().s[17]++;let AlutsistaAssetContract=class AlutsistaAssetContract extends fabric_contract_api_1.Contract{async alutsistaAssetExists(ctx,alutsistaAssetId){cov_1ysncxipf2().f[2]++;const buffer=(cov_1ysncxipf2().s[18]++,await ctx.stub.getState(alutsistaAssetId));cov_1ysncxipf2().s[19]++;return(cov_1ysncxipf2().b[13][0]++,!!buffer)&&(cov_1ysncxipf2().b[13][1]++,buffer.length>0);}async createAlutsistaAsset(ctx,alutsistaAssetId,name,model,year){cov_1ysncxipf2().f[3]++;//    const hasAccess = await this.hasRole(ctx, ['Manufacturer']);
//     if (!hasAccess) {
//         throw new Error(`Only manufacturer can create car asset`);
//     }
const exists=(cov_1ysncxipf2().s[20]++,await this.alutsistaAssetExists(ctx,alutsistaAssetId));cov_1ysncxipf2().s[21]++;if(exists){cov_1ysncxipf2().b[14][0]++;cov_1ysncxipf2().s[22]++;throw new Error(`The alutsista asset ${alutsistaAssetId} already exists`);}else{cov_1ysncxipf2().b[14][1]++;}const alutsistaAsset=(cov_1ysncxipf2().s[23]++,new alutsista_asset_1.AlutsistaAsset());cov_1ysncxipf2().s[24]++;alutsistaAsset.name=name;cov_1ysncxipf2().s[25]++;alutsistaAsset.model=model;cov_1ysncxipf2().s[26]++;alutsistaAsset.year=year;const buffer=(cov_1ysncxipf2().s[27]++,Buffer.from(JSON.stringify(alutsistaAsset)));cov_1ysncxipf2().s[28]++;await ctx.stub.putState(alutsistaAssetId,buffer);const transientMap=(cov_1ysncxipf2().s[29]++,ctx.stub.getTransient());cov_1ysncxipf2().s[30]++;if(transientMap.get('remark')){cov_1ysncxipf2().b[15][0]++;cov_1ysncxipf2().s[31]++;await ctx.stub.putPrivateData('productionRemark',alutsistaAssetId,transientMap.get('remark'));}else{cov_1ysncxipf2().b[15][1]++;}}async readAlutsistaAsset(ctx,alutsistaAssetId){cov_1ysncxipf2().f[4]++;const exists=(cov_1ysncxipf2().s[32]++,await this.alutsistaAssetExists(ctx,alutsistaAssetId));cov_1ysncxipf2().s[33]++;if(!exists){cov_1ysncxipf2().b[16][0]++;cov_1ysncxipf2().s[34]++;throw new Error(`The alutsista asset ${alutsistaAssetId} does not exist`);}else{cov_1ysncxipf2().b[16][1]++;}const buffer=(cov_1ysncxipf2().s[35]++,await ctx.stub.getState(alutsistaAssetId));const alutsistaAsset=(cov_1ysncxipf2().s[36]++,JSON.parse(buffer.toString()));cov_1ysncxipf2().s[37]++;try{const privBuffer=(cov_1ysncxipf2().s[38]++,await ctx.stub.getPrivateData('productionRemark',alutsistaAssetId));cov_1ysncxipf2().s[39]++;alutsistaAsset.remark=privBuffer.toString();cov_1ysncxipf2().s[40]++;return alutsistaAsset;}catch(error){cov_1ysncxipf2().s[41]++;return alutsistaAsset;}}async updateAlutsistaAsset(ctx,alutsistaAssetId,name,model,year){cov_1ysncxipf2().f[5]++;// const hasAccess = await this.hasRole(ctx, ['Manufacturer', 'Dealer']);
// if (!hasAccess) {
//     throw new Error(`Only manufacturer or dealer can update car asset`);
// }
const exists=(cov_1ysncxipf2().s[42]++,await this.alutsistaAssetExists(ctx,alutsistaAssetId));cov_1ysncxipf2().s[43]++;if(!exists){cov_1ysncxipf2().b[17][0]++;cov_1ysncxipf2().s[44]++;throw new Error(`The alutsista asset ${alutsistaAssetId} does not exist`);}else{cov_1ysncxipf2().b[17][1]++;}const alutsistaAsset=(cov_1ysncxipf2().s[45]++,new alutsista_asset_1.AlutsistaAsset());cov_1ysncxipf2().s[46]++;alutsistaAsset.name=name;cov_1ysncxipf2().s[47]++;alutsistaAsset.model=model;cov_1ysncxipf2().s[48]++;alutsistaAsset.year=year;const buffer=(cov_1ysncxipf2().s[49]++,Buffer.from(JSON.stringify(alutsistaAsset)));cov_1ysncxipf2().s[50]++;await ctx.stub.putState(alutsistaAssetId,buffer);}async deleteAlutsistaAsset(ctx,alutsistaAssetId){cov_1ysncxipf2().f[6]++;// const hasAccess = await this.hasRole(ctx, ['Dealer']);
// if (!hasAccess) {
//     throw new Error(`Only dealer can delete car asset`);
// }
const exists=(cov_1ysncxipf2().s[51]++,await this.alutsistaAssetExists(ctx,alutsistaAssetId));cov_1ysncxipf2().s[52]++;if(!exists){cov_1ysncxipf2().b[18][0]++;cov_1ysncxipf2().s[53]++;throw new Error(`The alutsista asset ${alutsistaAssetId} does not exist`);}else{cov_1ysncxipf2().b[18][1]++;}cov_1ysncxipf2().s[54]++;await ctx.stub.deleteState(alutsistaAssetId);}async queryAllAssets(ctx){cov_1ysncxipf2().f[7]++;const startKey=(cov_1ysncxipf2().s[55]++,'000');const endKey=(cov_1ysncxipf2().s[56]++,'999');const iterator=(cov_1ysncxipf2().s[57]++,await ctx.stub.getStateByRange(startKey,endKey));const allResults=(cov_1ysncxipf2().s[58]++,[]);cov_1ysncxipf2().s[59]++;while(true){const res=(cov_1ysncxipf2().s[60]++,await iterator.next());cov_1ysncxipf2().s[61]++;if((cov_1ysncxipf2().b[20][0]++,res.value)&&(cov_1ysncxipf2().b[20][1]++,res.value.value.toString())){cov_1ysncxipf2().b[19][0]++;cov_1ysncxipf2().s[62]++;console.log(res.value.value.toString());const Key=(cov_1ysncxipf2().s[63]++,res.value.key);let Record;cov_1ysncxipf2().s[64]++;try{cov_1ysncxipf2().s[65]++;Record=JSON.parse(res.value.value.toString());}catch(err){cov_1ysncxipf2().s[66]++;console.log(err);cov_1ysncxipf2().s[67]++;Record=res.value.value.toString();}cov_1ysncxipf2().s[68]++;allResults.push({Key,Record});}else{cov_1ysncxipf2().b[19][1]++;}cov_1ysncxipf2().s[69]++;if(res.done){cov_1ysncxipf2().b[21][0]++;cov_1ysncxipf2().s[70]++;console.log('end of data');cov_1ysncxipf2().s[71]++;await iterator.close();cov_1ysncxipf2().s[72]++;console.info(allResults);cov_1ysncxipf2().s[73]++;return JSON.stringify(allResults);}else{cov_1ysncxipf2().b[21][1]++;}}}async queryByMaker(ctx,maker){cov_1ysncxipf2().f[8]++;const query=(cov_1ysncxipf2().s[74]++,{selector:{maker}});const queryString=(cov_1ysncxipf2().s[75]++,JSON.stringify(query));const iterator=(cov_1ysncxipf2().s[76]++,await ctx.stub.getQueryResult(queryString));const allResults=(cov_1ysncxipf2().s[77]++,[]);cov_1ysncxipf2().s[78]++;while(true){const res=(cov_1ysncxipf2().s[79]++,await iterator.next());cov_1ysncxipf2().s[80]++;if((cov_1ysncxipf2().b[23][0]++,res.value)&&(cov_1ysncxipf2().b[23][1]++,res.value.value.toString())){cov_1ysncxipf2().b[22][0]++;cov_1ysncxipf2().s[81]++;console.log(res.value.value.toString());const Key=(cov_1ysncxipf2().s[82]++,res.value.key);let Record;cov_1ysncxipf2().s[83]++;try{cov_1ysncxipf2().s[84]++;Record=JSON.parse(res.value.value.toString());}catch(err){cov_1ysncxipf2().s[85]++;console.log(err);cov_1ysncxipf2().s[86]++;Record=res.value.value.toString();}cov_1ysncxipf2().s[87]++;allResults.push({Key,Record});}else{cov_1ysncxipf2().b[22][1]++;}cov_1ysncxipf2().s[88]++;if(res.done){cov_1ysncxipf2().b[24][0]++;cov_1ysncxipf2().s[89]++;console.log('end of data');cov_1ysncxipf2().s[90]++;await iterator.close();cov_1ysncxipf2().s[91]++;console.info(allResults);cov_1ysncxipf2().s[92]++;return JSON.stringify(allResults);}else{cov_1ysncxipf2().b[24][1]++;}}}async queryByMinYear(ctx,min,size,bookmark){cov_1ysncxipf2().f[9]++;const query=(cov_1ysncxipf2().s[93]++,{selector:{year:{$gte:min}}});const queryString=(cov_1ysncxipf2().s[94]++,JSON.stringify(query));const{iterator,metadata}=(cov_1ysncxipf2().s[95]++,await ctx.stub.getQueryResultWithPagination(queryString,size,bookmark));const allResults=(cov_1ysncxipf2().s[96]++,[]);cov_1ysncxipf2().s[97]++;while(true){const res=(cov_1ysncxipf2().s[98]++,await iterator.next());cov_1ysncxipf2().s[99]++;if((cov_1ysncxipf2().b[26][0]++,res.value)&&(cov_1ysncxipf2().b[26][1]++,res.value.value.toString())){cov_1ysncxipf2().b[25][0]++;cov_1ysncxipf2().s[100]++;console.log(res.value.value.toString());const Key=(cov_1ysncxipf2().s[101]++,res.value.key);let Record;cov_1ysncxipf2().s[102]++;try{cov_1ysncxipf2().s[103]++;Record=JSON.parse(res.value.value.toString());}catch(err){cov_1ysncxipf2().s[104]++;console.log(err);cov_1ysncxipf2().s[105]++;Record=res.value.value.toString();}cov_1ysncxipf2().s[106]++;allResults.push({Key,Record});}else{cov_1ysncxipf2().b[25][1]++;}cov_1ysncxipf2().s[107]++;if(res.done){cov_1ysncxipf2().b[27][0]++;const result=(cov_1ysncxipf2().s[108]++,{results:allResults,metadata});cov_1ysncxipf2().s[109]++;console.log('end of data');cov_1ysncxipf2().s[110]++;await iterator.close();cov_1ysncxipf2().s[111]++;console.info(result);cov_1ysncxipf2().s[112]++;return JSON.stringify(result);}else{cov_1ysncxipf2().b[27][1]++;}}}async getHistoryByKey(ctx,alutsistaAssetId){cov_1ysncxipf2().f[10]++;const iterator=(cov_1ysncxipf2().s[113]++,await ctx.stub.getHistoryForKey(alutsistaAssetId));const allResults=(cov_1ysncxipf2().s[114]++,[]);cov_1ysncxipf2().s[115]++;while(true){const res=(cov_1ysncxipf2().s[116]++,await iterator.next());cov_1ysncxipf2().s[117]++;if((cov_1ysncxipf2().b[29][0]++,res.value)&&(cov_1ysncxipf2().b[29][1]++,res.value.value.toString())){cov_1ysncxipf2().b[28][0]++;cov_1ysncxipf2().s[118]++;console.log(res.value.value.toString());let Record;cov_1ysncxipf2().s[119]++;try{cov_1ysncxipf2().s[120]++;Record=JSON.parse(res.value.value.toString());}catch(err){cov_1ysncxipf2().s[121]++;console.log(err);cov_1ysncxipf2().s[122]++;Record=res.value.value.toString();}cov_1ysncxipf2().s[123]++;allResults.push({Record});}else{cov_1ysncxipf2().b[28][1]++;}cov_1ysncxipf2().s[124]++;if(res.done){cov_1ysncxipf2().b[30][0]++;cov_1ysncxipf2().s[125]++;console.log('end of data');cov_1ysncxipf2().s[126]++;await iterator.close();cov_1ysncxipf2().s[127]++;console.info(allResults);cov_1ysncxipf2().s[128]++;return JSON.stringify(allResults);}else{cov_1ysncxipf2().b[30][1]++;}}}};cov_1ysncxipf2().s[129]++;__decorate([fabric_contract_api_1.Transaction(false),fabric_contract_api_1.Returns('boolean'),__metadata("design:type",Function),__metadata("design:paramtypes",[fabric_contract_api_1.Context,String]),__metadata("design:returntype",Promise)],AlutsistaAssetContract.prototype,"alutsistaAssetExists",null);cov_1ysncxipf2().s[130]++;__decorate([fabric_contract_api_1.Transaction(),__metadata("design:type",Function),__metadata("design:paramtypes",[fabric_contract_api_1.Context,String,String,String,Number]),__metadata("design:returntype",Promise)],AlutsistaAssetContract.prototype,"createAlutsistaAsset",null);cov_1ysncxipf2().s[131]++;__decorate([fabric_contract_api_1.Transaction(false),fabric_contract_api_1.Returns('AlutsistaAsset'),__metadata("design:type",Function),__metadata("design:paramtypes",[fabric_contract_api_1.Context,String]),__metadata("design:returntype",Promise)],AlutsistaAssetContract.prototype,"readAlutsistaAsset",null);cov_1ysncxipf2().s[132]++;__decorate([fabric_contract_api_1.Transaction(),__metadata("design:type",Function),__metadata("design:paramtypes",[fabric_contract_api_1.Context,String,String,String,Number]),__metadata("design:returntype",Promise)],AlutsistaAssetContract.prototype,"updateAlutsistaAsset",null);cov_1ysncxipf2().s[133]++;__decorate([fabric_contract_api_1.Transaction(),__metadata("design:type",Function),__metadata("design:paramtypes",[fabric_contract_api_1.Context,String]),__metadata("design:returntype",Promise)],AlutsistaAssetContract.prototype,"deleteAlutsistaAsset",null);cov_1ysncxipf2().s[134]++;__decorate([fabric_contract_api_1.Transaction(false),__metadata("design:type",Function),__metadata("design:paramtypes",[fabric_contract_api_1.Context]),__metadata("design:returntype",Promise)],AlutsistaAssetContract.prototype,"queryAllAssets",null);cov_1ysncxipf2().s[135]++;__decorate([fabric_contract_api_1.Transaction(false),__metadata("design:type",Function),__metadata("design:paramtypes",[fabric_contract_api_1.Context,String]),__metadata("design:returntype",Promise)],AlutsistaAssetContract.prototype,"queryByMaker",null);cov_1ysncxipf2().s[136]++;__decorate([fabric_contract_api_1.Transaction(false),__metadata("design:type",Function),__metadata("design:paramtypes",[fabric_contract_api_1.Context,Number,Number,String]),__metadata("design:returntype",Promise)],AlutsistaAssetContract.prototype,"queryByMinYear",null);cov_1ysncxipf2().s[137]++;__decorate([fabric_contract_api_1.Transaction(false),__metadata("design:type",Function),__metadata("design:paramtypes",[fabric_contract_api_1.Context,String]),__metadata("design:returntype",Promise)],AlutsistaAssetContract.prototype,"getHistoryByKey",null);cov_1ysncxipf2().s[138]++;AlutsistaAssetContract=__decorate([fabric_contract_api_1.Info({title:'AlutsistaAssetContract',description:'My Smart Contract'})],AlutsistaAssetContract);cov_1ysncxipf2().s[139]++;exports.AlutsistaAssetContract=AlutsistaAssetContract;//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6L1VzZXJzL0ZBSE1JUkFITUFESS9Eb2N1bWVudHMvR2l0SHViL2Jsb2NrY2hhaW4tYXNzaWdubWVudC9BbHV0c2lzdGFDb250cmFjdC9zcmMvYWx1dHNpc3RhLWFzc2V0LWNvbnRyYWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJhQUFBOztzdmtDQUtBOzBoRUFBQSxLQUFBLENBQUEscUJBQUEsMkJBQUEsT0FBQSxDQUFBLHFCQUFBLENBQUEsQ0FBQSxDQUNBLEtBQUEsQ0FBQSxpQkFBQSwyQkFBQSxPQUFBLENBQUEsbUJBQUEsQ0FBQSxDQUFBLEMseUJBR0EsR0FBYSxDQUFBLHNCQUFzQixDQUFuQyxLQUFhLENBQUEsc0JBQWIsUUFBNEMsQ0FBQSxxQkFBQSxDQUFBLFFBQVEsQ0FJekMsS0FBTSxDQUFBLG9CQUFOLENBQTJCLEdBQTNCLENBQXlDLGdCQUF6QyxDQUFpRSx5QkFDcEUsS0FBTSxDQUFBLE1BQU0sMkJBQUcsS0FBTSxDQUFBLEdBQUcsQ0FBQyxJQUFKLENBQVMsUUFBVCxDQUFrQixnQkFBbEIsQ0FBVCxDQUFaLENBRG9FLHlCQUVwRSxNQUFRLDhCQUFDLENBQUMsTUFBRixnQ0FBWSxNQUFNLENBQUMsTUFBUCxDQUFnQixDQUE1QixDQUFSLENBQ0gsQ0FHTSxLQUFNLENBQUEsb0JBQU4sQ0FBMkIsR0FBM0IsQ0FBeUMsZ0JBQXpDLENBQW1FLElBQW5FLENBQWlGLEtBQWpGLENBQWdHLElBQWhHLENBQTRHLHlCQUNuSDtBQUNBO0FBQ0E7QUFDQTtBQUNJLEtBQU0sQ0FBQSxNQUFNLDJCQUFHLEtBQU0sTUFBSyxvQkFBTCxDQUEwQixHQUExQixDQUErQixnQkFBL0IsQ0FBVCxDQUFaLENBTCtHLHlCQU0vRyxHQUFJLE1BQUosQ0FBWSxzREFDUixLQUFNLElBQUksQ0FBQSxLQUFKLENBQVUsdUJBQXVCLGdCQUFnQixpQkFBakQsQ0FBTixDQUNILENBRkQsa0NBR0EsS0FBTSxDQUFBLGNBQWMsMkJBQUcsR0FBSSxDQUFBLGlCQUFBLENB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QUFFLHdCQUFULENBQW1DLFdBQVcsQ0FBRSxtQkFBaEQsQ0FBTCxDQUNrQyxDQUFBLENBQXRCLHNCQUFzQixDQUF0QixDLDBCQUFBLE9BQUEsQ0FBQSxzQkFBQSxDQUFBLHNCQUFBLEMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEFwYWNoZS0yLjBcbiAqL1xuXG5pbXBvcnQgeyBwcm9taXNlcyB9IGZyb20gJ2Rucyc7XG5pbXBvcnQgeyBDb250ZXh0LCBDb250cmFjdCwgSW5mbywgUmV0dXJucywgVHJhbnNhY3Rpb24gfSBmcm9tICdmYWJyaWMtY29udHJhY3QtYXBpJztcbmltcG9ydCB7IEFsdXRzaXN0YUFzc2V0IH0gZnJvbSAnLi9hbHV0c2lzdGEtYXNzZXQnO1xuXG5ASW5mbyh7IHRpdGxlOiAnQWx1dHNpc3RhQXNzZXRDb250cmFjdCcsIGRlc2NyaXB0aW9uOiAnTXkgU21hcnQgQ29udHJhY3QnIH0pXG5leHBvcnQgY2xhc3MgQWx1dHNpc3RhQXNzZXRDb250cmFjdCBleHRlbmRzIENvbnRyYWN0IHtcblxuICAgIEBUcmFuc2FjdGlvbihmYWxzZSlcbiAgICBAUmV0dXJucygnYm9vbGVhbicpXG4gICAgcHVibGljIGFzeW5jIGFsdXRzaXN0YUFzc2V0RXhpc3RzKGN0eDogQ29udGV4dCwgYWx1dHNpc3RhQXNzZXRJZDogc3RyaW5nKTogUHJvbWlzZTxib29sZWFuPiB7XG4gICAgICAgIGNvbnN0IGJ1ZmZlciA9IGF3YWl0IGN0eC5zdHViLmdldFN0YXRlKGFsdXRzaXN0YUFzc2V0SWQpO1xuICAgICAgICByZXR1cm4gKCEhYnVmZmVyICYmIGJ1ZmZlci5sZW5ndGggPiAwKTtcbiAgICB9XG5cbiAgICBAVHJhbnNhY3Rpb24oKVxuICAgIHB1YmxpYyBhc3luYyBjcmVhdGVBbHV0c2lzdGFBc3NldChjdHg6IENvbnRleHQsIGFsdXRzaXN0YUFzc2V0SWQ6IHN0cmluZywgbmFtZTogc3RyaW5nLCBtb2RlbDogc3RyaW5nLCB5ZWFyOiBudW1iZXIpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICAvLyAgICBjb25zdCBoYXNBY2Nlc3MgPSBhd2FpdCB0aGlzLmhhc1JvbGUoY3R4LCBbJ01hbnVmYWN0dXJlciddKTtcbiAgICAvLyAgICAgaWYgKCFoYXNBY2Nlc3MpIHtcbiAgICAvLyAgICAgICAgIHRocm93IG5ldyBFcnJvcihgT25seSBtYW51ZmFjdHVyZXIgY2FuIGNyZWF0ZSBjYXIgYXNzZXRgKTtcbiAgICAvLyAgICAgfVxuICAgICAgICBjb25zdCBleGlzdHMgPSBhd2FpdCB0aGlzLmFsdXRzaXN0YUFzc2V0RXhpc3RzKGN0eCwgYWx1dHNpc3RhQXNzZXRJZCk7XG4gICAgICAgIGlmIChleGlzdHMpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVGhlIGFsdXRzaXN0YSBhc3NldCAke2FsdXRzaXN0YUFzc2V0SWR9IGFscmVhZHkgZXhpc3RzYCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgYWx1dHNpc3RhQXNzZXQgPSBuZXcgQWx1dHNpc3RhQXNzZXQoKTtcbiAgICAgICAgYWx1dHNpc3RhQXNzZXQubmFtZSA9IG5hbWU7XG4gICAgICAgIGFsdXRzaXN0YUFzc2V0Lm1vZGVsID0gbW9kZWw7XG4gICAgICAgIGFsdXRzaXN0YUFzc2V0LnllYXIgPSB5ZWFyO1xuICAgICAgICBjb25zdCBidWZmZXIgPSBCdWZmZXIuZnJvbShKU09OLnN0cmluZ2lmeShhbHV0c2lzdGFBc3NldCkpO1xuICAgICAgICBhd2FpdCBjdHguc3R1Yi5wdXRTdGF0ZShhbHV0c2lzdGFBc3NldElkLCBidWZmZXIpO1xuXG4gICAgICAgIGNvbnN0IHRyYW5zaWVudE1hcCA9IGN0eC5zdHViLmdldFRyYW5zaWVudCgpO1xuICAgICAgICBpZiAodHJhbnNpZW50TWFwLmdldCgncmVtYXJrJykpIHtcbiAgICAgICAgICAgIGF3YWl0IGN0eC5zdHViLnB1dFByaXZhdGVEYXRhKCdwcm9kdWN0aW9uUmVtYXJrJywgYWx1dHNpc3RhQXNzZXRJZCwgdHJhbnNpZW50TWFwLmdldCgncmVtYXJrJykpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgQFRyYW5zYWN0aW9uKGZhbHNlKVxuICAgIEBSZXR1cm5zKCdBbHV0c2lzdGFBc3NldCcpXG4gICAgcHVibGljIGFzeW5jIHJlYWRBbHV0c2lzdGFBc3NldChjdHg6IENvbnRleHQsIGFsdXRzaXN0YUFzc2V0SWQ6IHN0cmluZyk6IFByb21pc2U8QWx1dHNpc3RhQXNzZXQ+IHtcbiAgICAgICAgY29uc3QgZXhpc3RzID0gYXdhaXQgdGhpcy5hbHV0c2lzdGFBc3NldEV4aXN0cyhjdHgsIGFsdXRzaXN0YUFzc2V0SWQpO1xuICAgICAgICBpZiAoIWV4aXN0cykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBUaGUgYWx1dHNpc3RhIGFzc2V0ICR7YWx1dHNpc3RhQXNzZXRJZH0gZG9lcyBub3QgZXhpc3RgKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBidWZmZXIgPSBhd2FpdCBjdHguc3R1Yi5nZXRTdGF0ZShhbHV0c2lzdGFBc3NldElkKTtcbiAgICAgICAgY29uc3QgYWx1dHNpc3RhQXNzZXQgPSBKU09OLnBhcnNlKGJ1ZmZlci50b1N0cmluZygpKSBhcyBBbHV0c2lzdGFBc3NldDtcblxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgcHJpdkJ1ZmZlciA9IGF3YWl0IGN0eC5zdHViLmdldFByaXZhdGVEYXRhKCdwcm9kdWN0aW9uUmVtYXJrJywgYWx1dHNpc3RhQXNzZXRJZCk7XG4gICAgICAgICAgICBhbHV0c2lzdGFBc3NldC5yZW1hcmsgPSBwcml2QnVmZmVyLnRvU3RyaW5nKCk7XG4gICAgICAgICAgICByZXR1cm4gYWx1dHNpc3RhQXNzZXQ7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICByZXR1cm4gYWx1dHNpc3RhQXNzZXQ7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBAVHJhbnNhY3Rpb24oKVxuICAgIHB1YmxpYyBhc3luYyB1cGRhdGVBbHV0c2lzdGFBc3NldChjdHg6IENvbnRleHQsIGFsdXRzaXN0YUFzc2V0SWQ6IHN0cmluZywgbmFtZTogc3RyaW5nLCBtb2RlbDogc3RyaW5nLCB5ZWFyOiBudW1iZXIpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICAgICAgLy8gY29uc3QgaGFzQWNjZXNzID0gYXdhaXQgdGhpcy5oYXNSb2xlKGN0eCwgWydNYW51ZmFjdHVyZXInLCAnRGVhbGVyJ10pO1xuICAgICAgICAvLyBpZiAoIWhhc0FjY2Vzcykge1xuICAgICAgICAvLyAgICAgdGhyb3cgbmV3IEVycm9yKGBPbmx5IG1hbnVmYWN0dXJlciBvciBkZWFsZXIgY2FuIHVwZGF0ZSBjYXIgYXNzZXRgKTtcbiAgICAgICAgLy8gfVxuICAgICAgICBjb25zdCBleGlzdHMgPSBhd2FpdCB0aGlzLmFsdXRzaXN0YUFzc2V0RXhpc3RzKGN0eCwgYWx1dHNpc3RhQXNzZXRJZCk7XG4gICAgICAgIGlmICghZXhpc3RzKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFRoZSBhbHV0c2lzdGEgYXNzZXQgJHthbHV0c2lzdGFBc3NldElkfSBkb2VzIG5vdCBleGlzdGApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGFsdXRzaXN0YUFzc2V0ID0gbmV3IEFsdXRzaXN0YUFzc2V0KCk7XG4gICAgICAgIGFsdXRzaXN0YUFzc2V0Lm5hbWUgPSBuYW1lO1xuICAgICAgICBhbHV0c2lzdGFBc3NldC5tb2RlbCA9IG1vZGVsO1xuICAgICAgICBhbHV0c2lzdGFBc3NldC55ZWFyID0geWVhcjtcbiAgICAgICAgY29uc3QgYnVmZmVyID0gQnVmZmVyLmZyb20oSlNPTi5zdHJpbmdpZnkoYWx1dHNpc3RhQXNzZXQpKTtcbiAgICAgICAgYXdhaXQgY3R4LnN0dWIucHV0U3RhdGUoYWx1dHNpc3RhQXNzZXRJZCwgYnVmZmVyKTtcbiAgICB9XG5cbiAgICBAVHJhbnNhY3Rpb24oKVxuICAgIHB1YmxpYyBhc3luYyBkZWxldGVBbHV0c2lzdGFBc3NldChjdHg6IENvbnRleHQsIGFsdXRzaXN0YUFzc2V0SWQ6IHN0cmluZyk6IFByb21pc2U8dm9pZD4ge1xuICAgICAgICAvLyBjb25zdCBoYXNBY2Nlc3MgPSBhd2FpdCB0aGlzLmhhc1JvbGUoY3R4LCBbJ0RlYWxlciddKTtcbiAgICAgICAgLy8gaWYgKCFoYXNBY2Nlc3MpIHtcbiAgICAgICAgLy8gICAgIHRocm93IG5ldyBFcnJvcihgT25seSBkZWFsZXIgY2FuIGRlbGV0ZSBjYXIgYXNzZXRgKTtcbiAgICAgICAgLy8gfVxuICAgICAgICBjb25zdCBleGlzdHMgPSBhd2FpdCB0aGlzLmFsdXRzaXN0YUFzc2V0RXhpc3RzKGN0eCwgYWx1dHNpc3RhQXNzZXRJZCk7XG4gICAgICAgIGlmICghZXhpc3RzKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFRoZSBhbHV0c2lzdGEgYXNzZXQgJHthbHV0c2lzdGFBc3NldElkfSBkb2VzIG5vdCBleGlzdGApO1xuICAgICAgICB9XG4gICAgICAgIGF3YWl0IGN0eC5zdHViLmRlbGV0ZVN0YXRlKGFsdXRzaXN0YUFzc2V0SWQpO1xuICAgIH1cblxuICAgIEBUcmFuc2FjdGlvbihmYWxzZSlcbiAgICBwdWJsaWMgYXN5bmMgcXVlcnlBbGxBc3NldHMoY3R4OiBDb250ZXh0KTogUHJvbWlzZTxzdHJpbmc+IHtcbiAgICAgICAgY29uc3Qgc3RhcnRLZXkgPSAnMDAwJztcbiAgICAgICAgY29uc3QgZW5kS2V5ID0gJzk5OSc7XG4gICAgICAgIGNvbnN0IGl0ZXJhdG9yID0gYXdhaXQgY3R4LnN0dWIuZ2V0U3RhdGVCeVJhbmdlKHN0YXJ0S2V5LCBlbmRLZXkpO1xuICAgICAgICBjb25zdCBhbGxSZXN1bHRzID0gW107XG4gICAgICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgICAgICBjb25zdCByZXMgPSBhd2FpdCBpdGVyYXRvci5uZXh0KCk7XG4gICAgICAgICAgICBpZiAocmVzLnZhbHVlICYmIHJlcy52YWx1ZS52YWx1ZS50b1N0cmluZygpKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzLnZhbHVlLnZhbHVlLnRvU3RyaW5nKCkpO1xuXG4gICAgICAgICAgICAgICAgY29uc3QgS2V5ID0gcmVzLnZhbHVlLmtleTtcbiAgICAgICAgICAgICAgICBsZXQgUmVjb3JkO1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIFJlY29yZCA9IEpTT04ucGFyc2UocmVzLnZhbHVlLnZhbHVlLnRvU3RyaW5nKCkpO1xuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICAgICAgICAgICAgICBSZWNvcmQgPSByZXMudmFsdWUudmFsdWUudG9TdHJpbmcoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYWxsUmVzdWx0cy5wdXNoKHsgS2V5LCBSZWNvcmQgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAocmVzLmRvbmUpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnZW5kIG9mIGRhdGEnKTtcbiAgICAgICAgICAgICAgICBhd2FpdCBpdGVyYXRvci5jbG9zZSgpO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuaW5mbyhhbGxSZXN1bHRzKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoYWxsUmVzdWx0cyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBAVHJhbnNhY3Rpb24oZmFsc2UpXG4gICAgcHVibGljIGFzeW5jIHF1ZXJ5QnlNYWtlcihjdHg6IENvbnRleHQsIG1ha2VyOiBzdHJpbmcpOiBQcm9taXNlPHN0cmluZz4ge1xuICAgICAgICBjb25zdCBxdWVyeSA9IHsgc2VsZWN0b3I6IHsgbWFrZXIgfSB9O1xuICAgICAgICBjb25zdCBxdWVyeVN0cmluZyA9IEpTT04uc3RyaW5naWZ5KHF1ZXJ5KTtcbiAgICAgICAgY29uc3QgaXRlcmF0b3IgPSBhd2FpdCBjdHguc3R1Yi5nZXRRdWVyeVJlc3VsdChxdWVyeVN0cmluZyk7XG4gICAgICAgIGNvbnN0IGFsbFJlc3VsdHMgPSBbXTtcbiAgICAgICAgd2hpbGUgKHRydWUpIHtcbiAgICAgICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGl0ZXJhdG9yLm5leHQoKTtcbiAgICAgICAgICAgIGlmIChyZXMudmFsdWUgJiYgcmVzLnZhbHVlLnZhbHVlLnRvU3RyaW5nKCkpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMudmFsdWUudmFsdWUudG9TdHJpbmcoKSk7XG5cbiAgICAgICAgICAgICAgICBjb25zdCBLZXkgPSByZXMudmFsdWUua2V5O1xuICAgICAgICAgICAgICAgIGxldCBSZWNvcmQ7XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgUmVjb3JkID0gSlNPTi5wYXJzZShyZXMudmFsdWUudmFsdWUudG9TdHJpbmcoKSk7XG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgICAgICAgICAgICAgIFJlY29yZCA9IHJlcy52YWx1ZS52YWx1ZS50b1N0cmluZygpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBhbGxSZXN1bHRzLnB1c2goeyBLZXksIFJlY29yZCB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChyZXMuZG9uZSkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdlbmQgb2YgZGF0YScpO1xuICAgICAgICAgICAgICAgIGF3YWl0IGl0ZXJhdG9yLmNsb3NlKCk7XG4gICAgICAgICAgICAgICAgY29uc29sZS5pbmZvKGFsbFJlc3VsdHMpO1xuICAgICAgICAgICAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShhbGxSZXN1bHRzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIEBUcmFuc2FjdGlvbihmYWxzZSlcbiAgICBwdWJsaWMgYXN5bmMgcXVlcnlCeU1pblllYXIoY3R4OiBDb250ZXh0LCBtaW46IG51bWJlciwgc2l6ZTogbnVtYmVyLCBib29rbWFyaz86IHN0cmluZyk6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgICAgIGNvbnN0IHF1ZXJ5ID0geyBzZWxlY3RvcjogeyB5ZWFyOiB7ICRndGU6IG1pbiB9IH0gfTtcbiAgICAgICAgY29uc3QgcXVlcnlTdHJpbmcgPSBKU09OLnN0cmluZ2lmeShxdWVyeSk7XG5cbiAgICAgICAgY29uc3QgeyBpdGVyYXRvciwgbWV0YWRhdGEgfSA9IGF3YWl0IGN0eC5zdHViLmdldFF1ZXJ5UmVzdWx0V2l0aFBhZ2luYXRpb24ocXVlcnlTdHJpbmcsIHNpemUsIGJvb2ttYXJrKTtcblxuICAgICAgICBjb25zdCBhbGxSZXN1bHRzID0gW107XG4gICAgICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgICAgICBjb25zdCByZXMgPSBhd2FpdCBpdGVyYXRvci5uZXh0KCk7XG4gICAgICAgICAgICBpZiAocmVzLnZhbHVlICYmIHJlcy52YWx1ZS52YWx1ZS50b1N0cmluZygpKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzLnZhbHVlLnZhbHVlLnRvU3RyaW5nKCkpO1xuXG4gICAgICAgICAgICAgICAgY29uc3QgS2V5ID0gcmVzLnZhbHVlLmtleTtcbiAgICAgICAgICAgICAgICBsZXQgUmVjb3JkO1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIFJlY29yZCA9IEpTT04ucGFyc2UocmVzLnZhbHVlLnZhbHVlLnRvU3RyaW5nKCkpO1xuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICAgICAgICAgICAgICBSZWNvcmQgPSByZXMudmFsdWUudmFsdWUudG9TdHJpbmcoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYWxsUmVzdWx0cy5wdXNoKHsgS2V5LCBSZWNvcmQgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAocmVzLmRvbmUpIHtcbiAgICAgICAgICAgICAgICBjb25zdCByZXN1bHQgPSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdHM6IGFsbFJlc3VsdHMsXG4gICAgICAgICAgICAgICAgICAgIG1ldGFkYXRhXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnZW5kIG9mIGRhdGEnKTtcbiAgICAgICAgICAgICAgICBhd2FpdCBpdGVyYXRvci5jbG9zZSgpO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuaW5mbyhyZXN1bHQpO1xuICAgICAgICAgICAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShyZXN1bHQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgQFRyYW5zYWN0aW9uKGZhbHNlKVxuICAgIHB1YmxpYyBhc3luYyBnZXRIaXN0b3J5QnlLZXkoY3R4OiBDb250ZXh0LCBhbHV0c2lzdGFBc3NldElkOiBzdHJpbmcpOiBQcm9taXNlPHN0cmluZz4ge1xuICAgICAgICBjb25zdCBpdGVyYXRvciA9IGF3YWl0IGN0eC5zdHViLmdldEhpc3RvcnlGb3JLZXkoYWx1dHNpc3RhQXNzZXRJZCk7XG4gICAgICAgIGNvbnN0IGFsbFJlc3VsdHMgPSBbXTtcbiAgICAgICAgd2hpbGUgKHRydWUpIHtcbiAgICAgICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGl0ZXJhdG9yLm5leHQoKTtcbiAgICAgICAgICAgIGlmIChyZXMudmFsdWUgJiYgcmVzLnZhbHVlLnZhbHVlLnRvU3RyaW5nKCkpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMudmFsdWUudmFsdWUudG9TdHJpbmcoKSk7XG5cbiAgICAgICAgICAgICAgICBsZXQgUmVjb3JkO1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIFJlY29yZCA9IEpTT04ucGFyc2UocmVzLnZhbHVlLnZhbHVlLnRvU3RyaW5nKCkpO1xuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICAgICAgICAgICAgICBSZWNvcmQgPSByZXMudmFsdWUudmFsdWUudG9TdHJpbmcoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYWxsUmVzdWx0cy5wdXNoKHsgUmVjb3JkIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHJlcy5kb25lKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2VuZCBvZiBkYXRhJyk7XG4gICAgICAgICAgICAgICAgYXdhaXQgaXRlcmF0b3IuY2xvc2UoKTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmluZm8oYWxsUmVzdWx0cyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KGFsbFJlc3VsdHMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gcHVibGljIGFzeW5jIGhhc1JvbGUoY3R4OiBDb250ZXh0LCByb2xlczogc3RyaW5nW10pIHtcbiAgICAvLyAgICAgY29uc3QgY2xpZW50SUQgPSBjdHguY2xpZW50SWRlbnRpdHk7XG4gICAgLy8gICAgIGZvciAoY29uc3Qgcm9sZU5hbWUgb2Ygcm9sZXMpIHtcbiAgICAvLyAgICAgICAgIGlmIChjbGllbnRJRC5hc3NlcnRBdHRyaWJ1dGVWYWx1ZSgncm9sZScsIHJvbGVOYW1lKSkge1xuICAgIC8vICAgICAgICAgICAgIGlmIChjbGllbnRJRC5nZXRNU1BJRCgpID09PSAnT3JnMU1TUCcgJiYgY2xpZW50SUQuZ2V0QXR0cmlidXRlVmFsdWUoJ3JvbGUnKSA9PT0gJ01hbnVmYWN0dXJlcicpIHsgcmV0dXJuIHRydWU7IH1cbiAgICAvLyAgICAgICAgICAgICBpZiAoY2xpZW50SUQuZ2V0TVNQSUQoKSA9PT0gJ09yZzJNU1AnICYmIGNsaWVudElELmdldEF0dHJpYnV0ZVZhbHVlKCdyb2xlJykgPT09ICdEZWFsZXInKSB7IHJldHVybiB0cnVlOyB9XG4gICAgLy8gICAgICAgICB9XG4gICAgLy8gICAgIH1cbiAgICAvLyAgICAgcmV0dXJuIGZhbHNlO1xuICAgIC8vICAgICB9XG4gICAgfSJdfQ==