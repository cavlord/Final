"use strict";/*
 * SPDX-License-Identifier: Apache-2.0
 */function cov_22d3qoq154(){var path="C:\\Users\\FAHMIRAHMADI\\Documents\\GitHub\\blockchain-assignment\\AlutsistaContract\\src\\alutsista-asset-contract.spec.ts";var hash="0dee288bc18d888399fcc12248a1f7c206746545";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\FAHMIRAHMADI\\Documents\\GitHub\\blockchain-assignment\\AlutsistaContract\\src\\alutsista-asset-contract.spec.ts",statementMap:{"0":{start:{line:5,column:0},end:{line:5,column:62}},"1":{start:{line:6,column:22},end:{line:6,column:44}},"2":{start:{line:7,column:11},end:{line:7,column:23}},"3":{start:{line:8,column:13},end:{line:8,column:28}},"4":{start:{line:9,column:23},end:{line:9,column:50}},"5":{start:{line:10,column:14},end:{line:10,column:30}},"6":{start:{line:11,column:18},end:{line:11,column:39}},"7":{start:{line:12,column:16},end:{line:12,column:34}},"8":{start:{line:13,column:0},end:{line:13,column:14}},"9":{start:{line:14,column:0},end:{line:14,column:25}},"10":{start:{line:15,column:0},end:{line:15,column:20}},"11":{start:{line:18,column:8},end:{line:18,column:74}},"12":{start:{line:19,column:8},end:{line:19,column:85}},"13":{start:{line:20,column:8},end:{line:23,column:10}},"14":{start:{line:26,column:0},end:{line:78,column:3}},"15":{start:{line:29,column:4},end:{line:34,column:7}},"16":{start:{line:30,column:8},end:{line:30,column:51}},"17":{start:{line:31,column:8},end:{line:31,column:32}},"18":{start:{line:32,column:8},end:{line:32,column:107}},"19":{start:{line:33,column:8},end:{line:33,column:107}},"20":{start:{line:35,column:4},end:{line:42,column:7}},"21":{start:{line:36,column:8},end:{line:38,column:11}},"22":{start:{line:37,column:12},end:{line:37,column:87}},"23":{start:{line:39,column:8},end:{line:41,column:11}},"24":{start:{line:40,column:12},end:{line:40,column:88}},"25":{start:{line:43,column:4},end:{line:51,column:7}},"26":{start:{line:44,column:8},end:{line:47,column:11}},"27":{start:{line:45,column:12},end:{line:45,column:108}},"28":{start:{line:46,column:12},end:{line:46,column:132}},"29":{start:{line:48,column:8},end:{line:50,column:11}},"30":{start:{line:49,column:12},end:{line:49,column:157}},"31":{start:{line:52,column:4},end:{line:59,column:7}},"32":{start:{line:53,column:8},end:{line:55,column:11}},"33":{start:{line:54,column:12},end:{line:54,column:130}},"34":{start:{line:56,column:8},end:{line:58,column:11}},"35":{start:{line:57,column:12},end:{line:57,column:125}},"36":{start:{line:60,column:4},end:{line:68,column:7}},"37":{start:{line:61,column:8},end:{line:64,column:11}},"38":{start:{line:62,column:12},end:{line:62,column:112}},"39":{start:{line:63,column:12},end:{line:63,column:136}},"40":{start:{line:65,column:8},end:{line:67,column:11}},"41":{start:{line:66,column:12},end:{line:66,column:173}},"42":{start:{line:69,column:4},end:{line:77,column:7}},"43":{start:{line:70,column:8},end:{line:73,column:11}},"44":{start:{line:71,column:12},end:{line:71,column:61}},"45":{start:{line:72,column:12},end:{line:72,column:80}},"46":{start:{line:74,column:8},end:{line:76,column:11}},"47":{start:{line:75,column:12},end:{line:75,column:129}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:17,column:4},end:{line:17,column:5}},loc:{start:{line:17,column:18},end:{line:24,column:5}},line:17},"1":{name:"(anonymous_1)",decl:{start:{line:26,column:35},end:{line:26,column:36}},loc:{start:{line:26,column:41},end:{line:78,column:1}},line:26},"2":{name:"(anonymous_2)",decl:{start:{line:29,column:15},end:{line:29,column:16}},loc:{start:{line:29,column:21},end:{line:34,column:5}},line:29},"3":{name:"(anonymous_3)",decl:{start:{line:35,column:38},end:{line:35,column:39}},loc:{start:{line:35,column:44},end:{line:42,column:5}},line:35},"4":{name:"(anonymous_4)",decl:{start:{line:36,column:55},end:{line:36,column:56}},loc:{start:{line:36,column:67},end:{line:38,column:9}},line:36},"5":{name:"(anonymous_5)",decl:{start:{line:39,column:76},end:{line:39,column:77}},loc:{start:{line:39,column:88},end:{line:41,column:9}},line:39},"6":{name:"(anonymous_6)",decl:{start:{line:43,column:38},end:{line:43,column:39}},loc:{start:{line:43,column:44},end:{line:51,column:5}},line:43},"7":{name:"(anonymous_7)",decl:{start:{line:44,column:46},end:{line:44,column:47}},loc:{start:{line:44,column:58},end:{line:47,column:9}},line:44},"8":{name:"(anonymous_8)",decl:{start:{line:48,column:78},end:{line:48,column:79}},loc:{start:{line:48,column:90},end:{line:50,column:9}},line:48},"9":{name:"(anonymous_9)",decl:{start:{line:52,column:36},end:{line:52,column:37}},loc:{start:{line:52,column:42},end:{line:59,column:5}},line:52},"10":{name:"(anonymous_10)",decl:{start:{line:53,column:46},end:{line:53,column:47}},loc:{start:{line:53,column:58},end:{line:55,column:9}},line:53},"11":{name:"(anonymous_11)",decl:{start:{line:56,column:78},end:{line:56,column:79}},loc:{start:{line:56,column:90},end:{line:58,column:9}},line:56},"12":{name:"(anonymous_12)",decl:{start:{line:60,column:38},end:{line:60,column:39}},loc:{start:{line:60,column:44},end:{line:68,column:5}},line:60},"13":{name:"(anonymous_13)",decl:{start:{line:61,column:46},end:{line:61,column:47}},loc:{start:{line:61,column:58},end:{line:64,column:9}},line:61},"14":{name:"(anonymous_14)",decl:{start:{line:65,column:78},end:{line:65,column:79}},loc:{start:{line:65,column:90},end:{line:67,column:9}},line:65},"15":{name:"(anonymous_15)",decl:{start:{line:69,column:38},end:{line:69,column:39}},loc:{start:{line:69,column:44},end:{line:77,column:5}},line:69},"16":{name:"(anonymous_16)",decl:{start:{line:70,column:46},end:{line:70,column:47}},loc:{start:{line:70,column:58},end:{line:73,column:9}},line:70},"17":{name:"(anonymous_17)",decl:{start:{line:74,column:78},end:{line:74,column:79}},loc:{start:{line:74,column:90},end:{line:76,column:9}},line:74}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},b:{},inputSourceMap:{version:3,file:"C:/Users/FAHMIRAHMADI/Documents/GitHub/blockchain-assignment/AlutsistaContract/src/alutsista-asset-contract.spec.ts",sources:["C:/Users/FAHMIRAHMADI/Documents/GitHub/blockchain-assignment/AlutsistaContract/src/alutsista-asset-contract.spec.ts"],names:[],mappings:"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",sourcesContent:["/*\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Context } from 'fabric-contract-api';\nimport { ChaincodeStub, ClientIdentity } from 'fabric-shim';\nimport { AlutsistaAssetContract } from '.';\n\nimport * as chai from 'chai';\nimport * as chaiAsPromised from 'chai-as-promised';\nimport * as sinon from 'sinon';\nimport * as sinonChai from 'sinon-chai';\nimport winston = require('winston');\n\nchai.should();\nchai.use(chaiAsPromised);\nchai.use(sinonChai);\n\nclass TestContext implements Context {\n    public stub: sinon.SinonStubbedInstance<ChaincodeStub> = sinon.createStubInstance(ChaincodeStub);\n    public clientIdentity: sinon.SinonStubbedInstance<ClientIdentity> = sinon.createStubInstance(ClientIdentity);\n    public logger = {\n        getLogger: sinon.stub().returns(sinon.createStubInstance(winston.createLogger().constructor)),\n        setLevel: sinon.stub(),\n     };\n}\n\ndescribe('AlutsistaAssetContract', () => {\n\n    let contract: AlutsistaAssetContract;\n    let ctx: TestContext;\n\n    beforeEach(() => {\n        contract = new AlutsistaAssetContract();\n        ctx = new TestContext();\n        ctx.stub.getState.withArgs('1001').resolves(Buffer.from('{\"value\":\"alutsista asset 1001 value\"}'));\n        ctx.stub.getState.withArgs('1002').resolves(Buffer.from('{\"value\":\"alutsista asset 1002 value\"}'));\n    });\n\n    describe('#alutsistaAssetExists', () => {\n\n        it('should return true for a alutsista asset', async () => {\n            await contract.alutsistaAssetExists(ctx, '1001').should.eventually.be.true;\n        });\n\n        it('should return false for a alutsista asset that does not exist', async () => {\n            await contract.alutsistaAssetExists(ctx, '1003').should.eventually.be.false;\n        });\n\n    });\n\n    describe('#createAlutsistaAsset', () => {\n\n        it('should create a alutsista asset', async () => {\n            await contract.createAlutsistaAsset(ctx, '1003', 'alutsista asset 1003 value','myvalue',2000);\n            ctx.stub.putState.should.have.been.calledOnceWithExactly('1003', Buffer.from('{\"value\":\"alutsista asset 1003 value\"}'));\n        });\n\n        it('should throw an error for a alutsista asset that already exists', async () => {\n            await contract.createAlutsistaAsset(ctx, '1001', 'myvalue','myvalue',2000).should.be.rejectedWith('/The alutsista asset 1001 already exists/');\n        });\n\n    });\n\n    describe('#readAlutsistaAsset', () => {\n\n        it('should return a alutsista asset', async () => {\n            await contract.readAlutsistaAsset(ctx, '1001').should.eventually.deep.equal({ value: 'alutsista asset 1001 value', });\n        });\n\n        it('should throw an error for a alutsista asset that does not exist', async () => {\n            await contract.readAlutsistaAsset(ctx, '1003').should.be.rejectedWith(/The alutsista asset 1003 does not exist/);\n        });\n\n    });\n\n    describe('#updateAlutsistaAsset', () => {\n\n        it('should update a alutsista asset', async () => {\n            await contract.updateAlutsistaAsset(ctx, '1001', 'alutsista asset 1001 new value','myvalue',2000);\n            ctx.stub.putState.should.have.been.calledOnceWithExactly('1001', Buffer.from('{\"value\":\"alutsista asset 1001 new value\"}'));\n        });\n\n        it('should throw an error for a alutsista asset that does not exist', async () => {\n            await contract.updateAlutsistaAsset(ctx, '1003', 'alutsista asset 1003 new value','',2000).should.be.rejectedWith('/The alutsista asset 1003 does not exist/');\n        });\n\n    });\n\n    describe('#deleteAlutsistaAsset', () => {\n\n        it('should delete a alutsista asset', async () => {\n            await contract.deleteAlutsistaAsset(ctx, '1001');\n            ctx.stub.deleteState.should.have.been.calledOnceWithExactly('1001');\n        });\n\n        it('should throw an error for a alutsista asset that does not exist', async () => {\n            await contract.deleteAlutsistaAsset(ctx, '1003').should.be.rejectedWith('/The alutsista asset 1003 does not exist/');\n        });\n\n    });\n\n});\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"0dee288bc18d888399fcc12248a1f7c206746545"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_22d3qoq154=function(){return actualCoverage;};}return actualCoverage;}cov_22d3qoq154();cov_22d3qoq154().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const fabric_shim_1=(cov_22d3qoq154().s[1]++,require("fabric-shim"));const _1=(cov_22d3qoq154().s[2]++,require("."));const chai=(cov_22d3qoq154().s[3]++,require("chai"));const chaiAsPromised=(cov_22d3qoq154().s[4]++,require("chai-as-promised"));const sinon=(cov_22d3qoq154().s[5]++,require("sinon"));const sinonChai=(cov_22d3qoq154().s[6]++,require("sinon-chai"));const winston=(cov_22d3qoq154().s[7]++,require("winston"));cov_22d3qoq154().s[8]++;chai.should();cov_22d3qoq154().s[9]++;chai.use(chaiAsPromised);cov_22d3qoq154().s[10]++;chai.use(sinonChai);class TestContext{constructor(){cov_22d3qoq154().f[0]++;cov_22d3qoq154().s[11]++;this.stub=sinon.createStubInstance(fabric_shim_1.ChaincodeStub);cov_22d3qoq154().s[12]++;this.clientIdentity=sinon.createStubInstance(fabric_shim_1.ClientIdentity);cov_22d3qoq154().s[13]++;this.logger={getLogger:sinon.stub().returns(sinon.createStubInstance(winston.createLogger().constructor)),setLevel:sinon.stub()};}}cov_22d3qoq154().s[14]++;describe('AlutsistaAssetContract',()=>{cov_22d3qoq154().f[1]++;let contract;let ctx;cov_22d3qoq154().s[15]++;beforeEach(()=>{cov_22d3qoq154().f[2]++;cov_22d3qoq154().s[16]++;contract=new _1.AlutsistaAssetContract();cov_22d3qoq154().s[17]++;ctx=new TestContext();cov_22d3qoq154().s[18]++;ctx.stub.getState.withArgs('1001').resolves(Buffer.from('{"value":"alutsista asset 1001 value"}'));cov_22d3qoq154().s[19]++;ctx.stub.getState.withArgs('1002').resolves(Buffer.from('{"value":"alutsista asset 1002 value"}'));});cov_22d3qoq154().s[20]++;describe('#alutsistaAssetExists',()=>{cov_22d3qoq154().f[3]++;cov_22d3qoq154().s[21]++;it('should return true for a alutsista asset',async()=>{cov_22d3qoq154().f[4]++;cov_22d3qoq154().s[22]++;await contract.alutsistaAssetExists(ctx,'1001').should.eventually.be.true;});cov_22d3qoq154().s[23]++;it('should return false for a alutsista asset that does not exist',async()=>{cov_22d3qoq154().f[5]++;cov_22d3qoq154().s[24]++;await contract.alutsistaAssetExists(ctx,'1003').should.eventually.be.false;});});cov_22d3qoq154().s[25]++;describe('#createAlutsistaAsset',()=>{cov_22d3qoq154().f[6]++;cov_22d3qoq154().s[26]++;it('should create a alutsista asset',async()=>{cov_22d3qoq154().f[7]++;cov_22d3qoq154().s[27]++;await contract.createAlutsistaAsset(ctx,'1003','alutsista asset 1003 value','myvalue',2000);cov_22d3qoq154().s[28]++;ctx.stub.putState.should.have.been.calledOnceWithExactly('1003',Buffer.from('{"value":"alutsista asset 1003 value"}'));});cov_22d3qoq154().s[29]++;it('should throw an error for a alutsista asset that already exists',async()=>{cov_22d3qoq154().f[8]++;cov_22d3qoq154().s[30]++;await contract.createAlutsistaAsset(ctx,'1001','myvalue','myvalue',2000).should.be.rejectedWith('/The alutsista asset 1001 already exists/');});});cov_22d3qoq154().s[31]++;describe('#readAlutsistaAsset',()=>{cov_22d3qoq154().f[9]++;cov_22d3qoq154().s[32]++;it('should return a alutsista asset',async()=>{cov_22d3qoq154().f[10]++;cov_22d3qoq154().s[33]++;await contract.readAlutsistaAsset(ctx,'1001').should.eventually.deep.equal({value:'alutsista asset 1001 value'});});cov_22d3qoq154().s[34]++;it('should throw an error for a alutsista asset that does not exist',async()=>{cov_22d3qoq154().f[11]++;cov_22d3qoq154().s[35]++;await contract.readAlutsistaAsset(ctx,'1003').should.be.rejectedWith(/The alutsista asset 1003 does not exist/);});});cov_22d3qoq154().s[36]++;describe('#updateAlutsistaAsset',()=>{cov_22d3qoq154().f[12]++;cov_22d3qoq154().s[37]++;it('should update a alutsista asset',async()=>{cov_22d3qoq154().f[13]++;cov_22d3qoq154().s[38]++;await contract.updateAlutsistaAsset(ctx,'1001','alutsista asset 1001 new value','myvalue',2000);cov_22d3qoq154().s[39]++;ctx.stub.putState.should.have.been.calledOnceWithExactly('1001',Buffer.from('{"value":"alutsista asset 1001 new value"}'));});cov_22d3qoq154().s[40]++;it('should throw an error for a alutsista asset that does not exist',async()=>{cov_22d3qoq154().f[14]++;cov_22d3qoq154().s[41]++;await contract.updateAlutsistaAsset(ctx,'1003','alutsista asset 1003 new value','',2000).should.be.rejectedWith('/The alutsista asset 1003 does not exist/');});});cov_22d3qoq154().s[42]++;describe('#deleteAlutsistaAsset',()=>{cov_22d3qoq154().f[15]++;cov_22d3qoq154().s[43]++;it('should delete a alutsista asset',async()=>{cov_22d3qoq154().f[16]++;cov_22d3qoq154().s[44]++;await contract.deleteAlutsistaAsset(ctx,'1001');cov_22d3qoq154().s[45]++;ctx.stub.deleteState.should.have.been.calledOnceWithExactly('1001');});cov_22d3qoq154().s[46]++;it('should throw an error for a alutsista asset that does not exist',async()=>{cov_22d3qoq154().f[17]++;cov_22d3qoq154().s[47]++;await contract.deleteAlutsistaAsset(ctx,'1003').should.be.rejectedWith('/The alutsista asset 1003 does not exist/');});});});//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,